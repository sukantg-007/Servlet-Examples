/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-18 15:20:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.vc.entity.Product;
import java.util.List;
import com.vc.service.IProductService;
import com.vc.factory.ProductServiceFactory;
import java.util.Date;
import com.vc.service.ProductService;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Tomcat/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425958870000L));
    _jspx_dependants.put("file:/C:/Tomcat/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1632837108000L));
    _jspx_dependants.put("jar:file:/C:/Tomcat/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425958870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.vc.factory.ProductServiceFactory");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.vc.service.ProductService");
    _jspx_imports_classes.add("com.vc.entity.Product");
    _jspx_imports_classes.add("com.vc.service.IProductService");
    _jspx_imports_classes.add("java.util.Date");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Date today=new Date();

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>My Cart</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".badge-notify {\r\n");
      out.write("	background: red;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	top: -20px;\r\n");
      out.write("	right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".my-cart-icon-affix {\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	z-index: 999;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body class=\"container\">\r\n");
      out.write("	<div class=\"page-header\">\r\n");
      out.write("		<h1>\r\n");
      out.write("			Products\r\n");
      out.write("			<div style=\"float: right; cursor: pointer;\">\r\n");
      out.write("				<span class=\"glyphicon glyphicon-shopping-cart my-cart-icon\"><span\r\n");
      out.write("					class=\"badge badge-notify my-cart-badge\"></span></span>\r\n");
      out.write("			</div>\r\n");
      out.write("		</h1>\r\n");
      out.write("	</div>	\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script src=\"js/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("	<script type='text/javascript' src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("	<script type='text/javascript' src=\"js/jquery.mycart.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		$(function() {\r\n");
      out.write("			var goToCartIcon = function($addTocartBtn) {\r\n");
      out.write("				var $cartIcon = $(\".my-cart-icon\");\r\n");
      out.write("				var $image = $(\r\n");
      out.write("						'<img width=\"30px\" height=\"30px\" src=\"'\r\n");
      out.write("								+ $addTocartBtn.data(\"image\") + '\"/>').css({\r\n");
      out.write("					\"position\" : \"fixed\",\r\n");
      out.write("					\"z-index\" : \"999\"\r\n");
      out.write("				});\r\n");
      out.write("				$addTocartBtn.prepend($image);\r\n");
      out.write("				var position = $cartIcon.position();\r\n");
      out.write("				$image.animate({\r\n");
      out.write("					top : position.top,\r\n");
      out.write("					left : position.left\r\n");
      out.write("				}, 500, \"linear\", function() {\r\n");
      out.write("					$image.remove();\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			$('.my-cart-btn')\r\n");
      out.write("					.myCart(\r\n");
      out.write("							{\r\n");
      out.write("								currencySymbol : '',\r\n");
      out.write("								classCartIcon : 'my-cart-icon',\r\n");
      out.write("								classCartBadge : 'my-cart-badge',\r\n");
      out.write("								classProductQuantity : 'my-product-quantity',\r\n");
      out.write("								classProductRemove : 'my-product-remove',\r\n");
      out.write("								classCheckoutCart : 'my-cart-checkout',\r\n");
      out.write("								affixCartIcon : true,\r\n");
      out.write("								showCheckoutModal : true,\r\n");
      out.write("								numberOfDecimals : 2,\r\n");
      out.write("								cartItems : [],\r\n");
      out.write("								clickOnAddToCart : function($addTocart) {\r\n");
      out.write("									goToCartIcon($addTocart);\r\n");
      out.write("								},\r\n");
      out.write("								afterAddOnCart : function(products, totalPrice,\r\n");
      out.write("										totalQuantity) {\r\n");
      out.write("									console.log(\"afterAddOnCart\", products,\r\n");
      out.write("											totalPrice, totalQuantity);\r\n");
      out.write("								},\r\n");
      out.write("								clickOnCartIcon : function($cartIcon, products,\r\n");
      out.write("										totalPrice, totalQuantity) {\r\n");
      out.write("									console\r\n");
      out.write("											.log(\"cart icon clicked\",\r\n");
      out.write("													$cartIcon, products,\r\n");
      out.write("													totalPrice, totalQuantity);\r\n");
      out.write("								},\r\n");
      out.write("								checkoutCart : function(products, totalPrice,\r\n");
      out.write("										totalQuantity) {\r\n");
      out.write("									var order={\r\n");
      out.write("											totalp:totalPrice,\r\n");
      out.write("											totalq:totalQuantity,\r\n");
      out.write("											allproduct:products\r\n");
      out.write("									}\r\n");
      out.write("									/*var checkoutString = \"Total Price: \"\r\n");
      out.write("											+ totalPrice + \"\\nTotal Quantity: \"\r\n");
      out.write("											+ totalQuantity;\r\n");
      out.write("									checkoutString += \"\\n\\n id \\t name \\t summary \\t price \\t quantity \\t image path\";\r\n");
      out.write("									\r\n");
      out.write("									$.each(products,\r\n");
      out.write("											function() {\r\n");
      out.write("												checkoutString += (\"\\n \"\r\n");
      out.write("														+ this.id + \"  \"\r\n");
      out.write("														+ this.name + \" \"\r\n");
      out.write("														+ this.summary + \"  \"\r\n");
      out.write("														+ this.price + \"  \"\r\n");
      out.write("														+ this.quantity\r\n");
      out.write("														+ \"  \" + this.image);\r\n");
      out.write("											});\r\n");
      out.write("									*/\r\n");
      out.write("									alert(order.allproduct[0].id);\r\n");
      out.write("									console.log(\"checking out\", products,\r\n");
      out.write("											totalPrice, totalQuantity);\r\n");
      out.write("								},\r\n");
      out.write("								getDiscountPrice : function(products,\r\n");
      out.write("										totalPrice, totalQuantity) {\r\n");
      out.write("									console\r\n");
      out.write("											.log(\"calculating discount\",\r\n");
      out.write("													products, totalPrice,\r\n");
      out.write("													totalQuantity);\r\n");
      out.write("									return totalPrice * 0.9;\r\n");
      out.write("								}\r\n");
      out.write("							});\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /index.jsp(46,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("product");
      // /index.jsp(46,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/index.jsp(46,2) '${ProductServiceFactory.getProductService().showAll()}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ProductServiceFactory.getProductService().showAll()}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("			<div class=\"col-md-3 text-center\">\r\n");
            out.write("				<img src=\"images/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPimg_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"150px\"\r\n");
            out.write("					height=\"150px\"> <br> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<strong><i class=\"fa fa-inr\"></i> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPrice()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong>\r\n");
            out.write("				<br>\r\n");
            out.write("				<button class=\"btn btn-danger my-cart-btn\"\r\n");
            out.write("					data-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPid()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" data-name=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("					data-summary=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getSummary()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("					data-price=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPrice()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" data-quantity=\"1\"\r\n");
            out.write("					data-image=\"images/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPimg_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">Add to Cart</button>\r\n");
            out.write("				<a type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\"\r\n");
            out.write("					data-target=\"#exampleModalScrollable\"> Details </a>\r\n");
            out.write("\r\n");
            out.write("				<!-- Modal -->\r\n");
            out.write("				<div class=\"modal fade\" id=\"exampleModalScrollable\" tabindex=\"-1\"\r\n");
            out.write("					role=\"dialog\" aria-labelledby=\"exampleModalScrollableTitle\"\r\n");
            out.write("					aria-hidden=\"true\">\r\n");
            out.write("					<div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\r\n");
            out.write("						<div class=\"modal-content\">\r\n");
            out.write("							<div class=\"modal-header\">\r\n");
            out.write("								<h5 class=\"modal-title\" id=\"exampleModalScrollableTitle\">\r\n");
            out.write("									");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("<strong><i class=\"fa fa-inr\"></i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPrice()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</strong>\r\n");
            out.write("								</h5>\r\n");
            out.write("								<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
            out.write("									aria-label=\"Close\">\r\n");
            out.write("									<span aria-hidden=\"true\">&times;</span>\r\n");
            out.write("								</button>\r\n");
            out.write("							</div>\r\n");
            out.write("							<div class=\"modal-body\">\r\n");
            out.write("								<div class=\"card mb-3\" style=\"max-width: 540px;\">\r\n");
            out.write("									<div class=\"row g-0\">\r\n");
            out.write("										<div class=\"col-md-4\">\r\n");
            out.write("											<img src=\"images/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPimg_path()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"150px\" height=\"150px\"\r\n");
            out.write("												class=\"img-fluid rounded-start\" alt=\"...\">\r\n");
            out.write("										</div>\r\n");
            out.write("										<div class=\"col-md-8\">\r\n");
            out.write("											<div class=\"card-body\">\r\n");
            out.write("												<h5 class=\"card-title\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getPname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h5>\r\n");
            out.write("												<p class=\"card-text\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${product.getSummary()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("												<p class=\"card-text\">\r\n");
            out.write("													<small class=\"text-muted\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${today}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</small>\r\n");
            out.write("												</p>\r\n");
            out.write("											</div>\r\n");
            out.write("										</div>\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("								<div class=\"modal-footer\">\r\n");
            out.write("									<button type=\"button\" class=\"btn btn-warning\"\r\n");
            out.write("										data-dismiss=\"modal\">Close</button>\r\n");
            out.write("								</div>\r\n");
            out.write("							</div>\r\n");
            out.write("						</div>\r\n");
            out.write("					</div>\r\n");
            out.write("				</div>\r\n");
            out.write("			</div>\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
